<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2022/07/16做题日记</title>
    <link href="/2022/07/16/20220716%E5%81%9A%E9%A2%98%E6%97%A5%E8%AE%B0/"/>
    <url>/2022/07/16/20220716%E5%81%9A%E9%A2%98%E6%97%A5%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="2022河南萌新联赛第一场河南工业大学"><a class="markdownIt-Anchor" href="#2022河南萌新联赛第一场河南工业大学"></a> <a href="https://ac.nowcoder.com/acm/contest/37160">2022河南萌新联赛第（一）场：河南工业大学</a></h1><h2 id="a-alice-and-bob"><a class="markdownIt-Anchor" href="#a-alice-and-bob"></a> <a href="https://ac.nowcoder.com/acm/contest/37160/A">A. Alice and Bob</a></h2><p>解析：根据题意–<span id="more"></span>每次轮流操作，每次操作需要将数n除以a<sup>k</sup>（a、k为正整数，a为质数，并且整a<sup>k</sup>除当前的n）。由此，我们可以将数n质因数分解，看成数n分成了若干堆的石子（质数），因为谁先将数n变为1谁输，题目进而转化成了<a href="#Anti-Nim">Anti-Nim游戏</a>。</p><p>根据Anti-Nim游戏的结论，可以得出一下代码：</p><details>    <summary>AC代码</summary><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>), cout.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">init</span>();<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    <span class="hljs-type">int</span> sum = <span class="hljs-number">0</span>, f = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">2</span>; i * i &lt;= n; i++) &#123;<br>        <span class="hljs-keyword">if</span>(n % i == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> (n % i == <span class="hljs-number">0</span>) &#123;<br>                n /= i;<br>                cnt++;<br>            &#125;<br>            sum ^= cnt;<br>            <span class="hljs-keyword">if</span> (cnt != <span class="hljs-number">1</span>) f = <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-number">1</span>) sum ^= <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span> ((sum &gt; <span class="hljs-number">0</span> &amp;&amp; f == <span class="hljs-number">1</span>) || (sum == <span class="hljs-number">0</span> &amp;&amp; f == <span class="hljs-number">0</span>)) &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;Alice win\n&quot;</span>;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;Bob win\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure></details><h3 id="a-idanti-nimanti-nim游戏a"><a class="markdownIt-Anchor" href="#a-idanti-nimanti-nim游戏a"></a> <a id="Anti-Nim">Anti-Nim游戏</a></h3><p>与Nim游戏（也称反Nim游戏）相似，在终止条件中不同：</p><ol><li>Nim游戏：取走<u>最后一个石子者</u> <font color="red">胜</font></li><li>Anti-Nim游戏：取走<u>最后一个石子者</u> <font color="red">败</font></li></ol><p><strong>结论：</strong> 先手必胜的条件为一下两种之一：</p><ol><li>所有堆的石子数 = 1 &amp;&amp; 堆数是偶数堆；</li><li>至少有一堆的石子数 &gt; 1 &amp;&amp; 石子堆数的异或和 != 0。</li></ol><p><strong>证明：</strong></p>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022天梯总决赛题解</title>
    <link href="/2022/04/25/2022%E5%A4%A9%E6%A2%AF%E6%80%BB%E5%86%B3%E8%B5%9B%E9%A2%98%E8%A7%A3/"/>
    <url>/2022/04/25/2022%E5%A4%A9%E6%A2%AF%E6%80%BB%E5%86%B3%E8%B5%9B%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="l2-01-插松枝"><a class="markdownIt-Anchor" href="#l2-01-插松枝"></a> <a href="https://pintia.cn/problem-sets/994805046380707840/problems/1518582268930473984">L2-01 插松枝</a></h2><p>解析：模拟题。重要的是读懂题目，其次注意手上的松枝成品放入成品篮的几个时机。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><br>stack&lt;<span class="hljs-type">int</span>&gt; box, head;<br>deque&lt;<span class="hljs-type">int</span>&gt; dq;<br>vector&lt;<span class="hljs-type">int</span>&gt; ans[<span class="hljs-number">1100</span>];<br><span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">pushAns</span><span class="hljs-params">()</span> </span>&#123;<br>    cnt++;<br>    <span class="hljs-keyword">while</span> (!head.<span class="hljs-built_in">empty</span>()) &#123;<br>        ans[cnt].<span class="hljs-built_in">push_back</span>(head.<span class="hljs-built_in">top</span>());<br>        head.<span class="hljs-built_in">pop</span>();<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n, m, k;<br>    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        <span class="hljs-type">int</span> x;<br>        cin &gt;&gt; x;<br>        dq.<span class="hljs-built_in">push_back</span>(x);<br>    &#125;<br><br>    <span class="hljs-type">int</span> x = <span class="hljs-number">0</span>;<br><br>    <span class="hljs-keyword">while</span> (!dq.<span class="hljs-built_in">empty</span>()) &#123;<br>        <span class="hljs-keyword">if</span> (head.<span class="hljs-built_in">size</span>() == k) &#123;<br>            <span class="hljs-built_in">pushAns</span>();<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">while</span> (!box.<span class="hljs-built_in">empty</span>()) &#123;<br>            x = box.<span class="hljs-built_in">top</span>();<br>            box.<span class="hljs-built_in">pop</span>();<br>            <span class="hljs-keyword">if</span> (head.<span class="hljs-built_in">size</span>() == k) &#123;<br>                box.<span class="hljs-built_in">push</span>(x);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (head.<span class="hljs-built_in">empty</span>() || (x &lt;= head.<span class="hljs-built_in">top</span>() &amp;&amp; head.<span class="hljs-built_in">size</span>() &lt; k)) &#123;<br>                head.<span class="hljs-built_in">push</span>(x);<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-keyword">if</span> (x &gt; head.<span class="hljs-built_in">top</span>()) &#123;<br>                box.<span class="hljs-built_in">push</span>(x);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (head.<span class="hljs-built_in">size</span>() == k) <span class="hljs-keyword">continue</span>;<br><br>        x = dq.<span class="hljs-built_in">front</span>();<br>        dq.<span class="hljs-built_in">pop_front</span>();<br>        <span class="hljs-keyword">if</span> (head.<span class="hljs-built_in">empty</span>() || x &lt;= head.<span class="hljs-built_in">top</span>()) &#123;<br>            head.<span class="hljs-built_in">push</span>(x);<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (x &gt; head.<span class="hljs-built_in">top</span>()) &#123;<br>            <span class="hljs-keyword">if</span> (box.<span class="hljs-built_in">size</span>() == m) &#123;<br>                <span class="hljs-built_in">pushAns</span>();<br>                dq.<span class="hljs-built_in">push_front</span>(x);<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                box.<span class="hljs-built_in">push</span>(x);<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">while</span> (!box.<span class="hljs-built_in">empty</span>()) &#123;<br>        x = box.<span class="hljs-built_in">top</span>();<br>        box.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">if</span> (head.<span class="hljs-built_in">size</span>() == k) &#123;<br>            <span class="hljs-built_in">pushAns</span>();<br>            box.<span class="hljs-built_in">push</span>(x);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (head.<span class="hljs-built_in">empty</span>() || (x &lt;= head.<span class="hljs-built_in">top</span>() &amp;&amp; head.<span class="hljs-built_in">size</span>() &lt; k)) &#123;<br>            head.<span class="hljs-built_in">push</span>(x);<br>            <span class="hljs-keyword">continue</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (x &gt; head.<span class="hljs-built_in">top</span>()) &#123;<br>            <span class="hljs-built_in">pushAns</span>();<br>            box.<span class="hljs-built_in">push</span>(x);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span> (!head.<span class="hljs-built_in">empty</span>()) &#123;<br>        <span class="hljs-built_in">pushAns</span>();<br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= cnt; i++) &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = ans[i].<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span>; j--) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d%c&quot;</span>, ans[i][j], j == <span class="hljs-number">0</span> ? <span class="hljs-string">&#x27;\n&#x27;</span> : <span class="hljs-string">&#x27; &#x27;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="l2-02-老板的作息表"><a class="markdownIt-Anchor" href="#l2-02-老板的作息表"></a> <a href="https://pintia.cn/problem-sets/994805046380707840/problems/1518582383141380096">L2-02 老板的作息表</a></h2><p>解析：模拟题。主要是要知道怎么用输入的数据，换成秒也好，直接用也好都是一种途径。</p><p>我们先把输入<strong>时间的起止</strong>点存下来，由于每个时间区间都没有重叠，所以将输入按起点升序排序，每次判断上一个区间的终点 <strong>A</strong> 是否和当前区间的起点<strong>B</strong>重合，不重合意味着这终点<strong>A</strong>到起点<strong>B</strong>之间是我们要输出的。最后要特判一下输入的区间最后一个时间点是否到了 <strong>23:59:59</strong>，没到就将这个区间输出。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span>+<span class="hljs-number">5</span>;<br><br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Node</span> &#123;<br>    <span class="hljs-type">int</span> h, m, s, hh, mm, ss;<br>    <span class="hljs-type">int</span> x, y;<br>&#125;a;<br><br>vector&lt;Node&gt; tim;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n; cin &gt;&gt; n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d:%d:%d - %d:%d:%d&quot;</span>, &amp;a.h, &amp;a.m, &amp;a.s, &amp;a.hh, &amp;a.mm, &amp;a.ss);<br>        a.x = a.h * <span class="hljs-number">3600</span> + a.m * <span class="hljs-number">60</span> + a.s;<br>        a.y = a.hh * <span class="hljs-number">3600</span> + a.mm * <span class="hljs-number">60</span> + a.ss;<br>        tim.<span class="hljs-built_in">push_back</span>(a);<br>    &#125;<br><br>    <span class="hljs-built_in">sort</span>(tim.<span class="hljs-built_in">begin</span>(), tim.<span class="hljs-built_in">end</span>(), [](Node x, Node y) &#123;<br>        <span class="hljs-keyword">return</span> x.x &lt; y.x;<br>    &#125;);<br><br><br>    Node now;<br>    now.x = <span class="hljs-number">0</span>, now.y = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> &amp;i : tim) &#123;<br>        <span class="hljs-keyword">if</span>(i.x != now.y) &#123;<br>            <span class="hljs-type">int</span> q = now.y / <span class="hljs-number">3600</span>, w = (now.y - q * <span class="hljs-number">3600</span>) / <span class="hljs-number">60</span>, e = now.y - q * <span class="hljs-number">3600</span> - w * <span class="hljs-number">60</span>;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%02d:%02d:%02d&quot;</span>, q, w, e);<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; - &quot;</span>);<br>            q = i.x / <span class="hljs-number">3600</span>, w = (i.x - q * <span class="hljs-number">3600</span>) / <span class="hljs-number">60</span>, e = i.x - q * <span class="hljs-number">3600</span> - w * <span class="hljs-number">60</span>; <br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%02d:%02d:%02d\n&quot;</span>, q, w, e);<br>        &#125;<br>        now = i;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(now.y != <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> - <span class="hljs-number">1</span>) &#123;<br>        <span class="hljs-type">int</span> q = now.y / <span class="hljs-number">3600</span>, w = (now.y - q * <span class="hljs-number">3600</span>) / <span class="hljs-number">60</span>, e = now.y - q * <span class="hljs-number">3600</span> - w * <span class="hljs-number">60</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%02d:%02d:%02d - 23:59:59\n&quot;</span>, q, w, e);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="l2-03-龙龙送外卖"><a class="markdownIt-Anchor" href="#l2-03-龙龙送外卖"></a> <a href="https://pintia.cn/problem-sets/994805046380707840/problems/1518582482059845632">L2-03 龙龙送外卖</a></h2><p>解析：思维题。首先贪心考虑可以知道节点深度越深应该走的次数尽可能的少(最好一次)</p><p>由题意可以先建树可以有：</p><p>先考虑每次送完外卖都要回到起点那么路径长度是多少？</p><p>每送完一次再回到起点要走深度(设为 h[] ) * 2，即<strong>走一圈</strong>的路径长度，那么先送到 5 <strong>再送到</strong> 6 的路径长度为 h[5] * 2 + h[6]；</p><p>现在不用回到原点，意味着走到 5 后返回 2 即可再送至 6 ，走一圈就为 (1-&gt;2) + (2-&gt;5) + (5-&gt;2) + (2-&gt;6) + (6-&gt;2) + (2-&gt;1) 长度为6，深度最大为 2 ，因为不用走回去，所以长度为 6 - 2 = 4；</p><p>举个例子：建立如下的树</p><p>现在我要先送到 5 ，再送到4。容易得到送到 5 走一圈的长度为 4 ，不用回到起点的长度为 4 - 2(这个 2 为目前到位置最大深度) = 2；现在送到 4 走一圈的长度为 8 ，不用回到起点的长度为 8 - 3(这个 3 为目前到位置最大深度) = 5。</p><p><strong>注意</strong>，题目的问题是“从外卖站出发，访问所有点了外卖的地方至少一次（这样才能把外卖送到）所需的最短路程的距离到底是多少？”</p><p>根据这个思路，我们可以得到以下代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span>+<span class="hljs-number">5</span>;<br><br><span class="hljs-type">int</span> n, m, rt;<br><span class="hljs-type">int</span> f[N], h[N], a[N];<br><span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>vector&lt;<span class="hljs-type">int</span>&gt; son[N];<br>queue&lt;<span class="hljs-type">int</span>&gt; q;<br><br><span class="hljs-comment">// bfs求节点的深度</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">bfs</span><span class="hljs-params">()</span> </span>&#123;<br>    h[rt] = <span class="hljs-number">1</span>;<br>    <span class="hljs-type">int</span> tmp;<br>    q.<span class="hljs-built_in">push</span>(rt);<br>    <span class="hljs-keyword">while</span>(!q.<span class="hljs-built_in">empty</span>()) &#123;<br>        tmp = q.<span class="hljs-built_in">front</span>();<br>        q.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> &amp;i : son[tmp]) &#123;<br>            q.<span class="hljs-built_in">push</span>(i);<br>            h[i] = h[tmp] + <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">(<span class="hljs-type">int</span> x)</span> </span>&#123;<br>    <span class="hljs-comment">// 走过的点就不需要再去更新答案了</span><br>    <span class="hljs-keyword">if</span>(f[x]) <span class="hljs-keyword">return</span> ;<br>    <span class="hljs-comment">// 加2是因为我们要走一个圈即走到原点，那么每条路径都走了两遍</span><br>    ans += <span class="hljs-number">2</span>;<br>    <span class="hljs-comment">// 走过的点直接标记了，因为后面又要给这个点送餐时对于答案来说无影响</span><br>    f[x] = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">solve</span>(a[x]);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    cin &gt;&gt; n &gt;&gt; m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        cin &gt;&gt; a[i];<br>        <span class="hljs-keyword">if</span>(a[i] == <span class="hljs-number">-1</span>) &#123;<br>            rt = i;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            son[a[i]].<span class="hljs-built_in">push_back</span>(i);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-built_in">bfs</span>();<br><br>    <span class="hljs-type">int</span> maxn = <span class="hljs-number">-1</span>;<br>    f[rt] = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) &#123;<br>        <span class="hljs-type">int</span> x; cin &gt;&gt; x;<br>        maxn = <span class="hljs-built_in">max</span>(maxn, h[x]);<br>        <span class="hljs-built_in">solve</span>(x);<br>        cout &lt;&lt; ans - maxn + <span class="hljs-number">1</span> &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="l2-04-大众情人"><a class="markdownIt-Anchor" href="#l2-04-大众情人"></a> <a href="https://pintia.cn/problem-sets/994805046380707840/problems/1518582589840875520">L2-04 大众情人</a></h2><p>解析：Floyd。</p>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Android studio连接MySQL数据库</title>
    <link href="/2022/04/15/Android%20studio%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <url>/2022/04/15/Android%20studio%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>小组做软件工程的大作业，其中遇到的一道问题–Android studio 连接MySQL数据库。<span id="more"></span>从网上找了一大堆教程，没起效果，而后b站搜了教程，终于成了，现在记录如下。<a href="https://www.bilibili.com/video/BV1c64y1c7nH?p=1">链接在这儿~</a></p><h2 id="下载必要的工具等"><a class="markdownIt-Anchor" href="#下载必要的工具等"></a> 下载必要的工具等</h2><p>主要是下载 <strong>mysql-connector-java-5.1.xx-bin.jar</strong>    <s>百度一下就有了</s></p><p>粘贴到该位置</p><p>不用改名字/位置，直接点OK</p><p>然后，右键文件点Add As Library…</p><p>等加载完成第一步就OK了。</p><h2 id="创建文件等"><a class="markdownIt-Anchor" href="#创建文件等"></a> 创建文件等</h2><p>现在就是必要的文件修改或创建。</p><ol><li><p>xxxxxxxxxx7 1#include &lt;bits/stdc++.h&gt;2using namespace std;3​4int main() {5    cout &lt;&lt; “hello world\n”;6    return 0;7}cpp</p></li><li><p><strong>添加以下代码</strong></p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">uses-permission</span> <span class="hljs-attr">android:name</span>=<span class="hljs-string">&quot;android.permission.INTERNET&quot;</span>/&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li><strong>然后在这个位置新建.java文件，我这里按照视频取文件名</strong></li></ol><p><s>话说我之前为什么要打码啊，反正没人看不是</s></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.dempprojecttwo;<br><br><span class="hljs-keyword">import</span> java.sql.Connection;<br><span class="hljs-keyword">import</span> java.sql.DriverManager;<br><span class="hljs-keyword">import</span> java.sql.ResultSet;<br><span class="hljs-keyword">import</span> java.sql.Statement;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MySqlHelp</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getUserSize</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">// CLS 的路径是Driver文件的路径，一般都是这个，图片在下面</span><br>        <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">CLS</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;com.mysql.jdbc.Driver&quot;</span>;<br>        <span class="hljs-comment">// URL的格式写成 jdbc:mysql://你的本机IPV4地址:端口号(应该写3306是可以的，不行就百度)/你的数据库名</span><br>        <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">URL</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;jdbc:mysql://IPV4地址:3306/数据库名(不是表名~)&quot;</span>;<br>        <span class="hljs-comment">// 访问数据库的用户帐号密码，设置图片在下面</span><br>        <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">USER</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;1onght&quot;</span>;<br>        <span class="hljs-keyword">final</span> <span class="hljs-type">String</span> <span class="hljs-variable">PWD</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;123456&quot;</span>;<br><br>        <span class="hljs-comment">// 下面的代码依照视频写出</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; <span class="hljs-comment">// 用户数量</span><br><br>        <span class="hljs-keyword">try</span> &#123;<br>            Class.forName(CLS);<br>            <span class="hljs-type">Connection</span> <span class="hljs-variable">conn</span> <span class="hljs-operator">=</span> DriverManager.getConnection(URL, USER, PWD);<br>            <span class="hljs-comment">// SQL语句，这里是统计数据库表里有几组数据</span><br>            <span class="hljs-comment">// 依据实际情况改写语句</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">sql</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;select count(1) as s1 from Student&quot;</span>;<br>            <span class="hljs-type">Statement</span> <span class="hljs-variable">stmt</span> <span class="hljs-operator">=</span> conn.createStatement();<br>            <span class="hljs-type">ResultSet</span> <span class="hljs-variable">rs</span> <span class="hljs-operator">=</span> stmt.executeQuery(sql);<br>            <span class="hljs-keyword">while</span>(rs.next()) &#123;<br>                count = rs.getInt(<span class="hljs-string">&quot;s1&quot;</span>);<br>            &#125;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception ex) &#123;<br>            ex.printStackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> count;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>Driver</strong>文件路径，就在下面自己找找</p><p><strong>不是这个位置的！！！</strong></p><p>创建连接数据库的用户，创建方法可以百度哦</p><p>然后在 mysql 内设置</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> <span class="hljs-operator">*</span>.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;用户名&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;密码&#x27;</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">GRANT</span> OPTION;<br></code></pre></td></tr></table></figure><ol start="4"><li><strong>最后编辑 MainActivity.java文件和使用的 .xml文件，代码如下</strong></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;10dp&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/fun_1&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;安卓直接访问mysql数据库&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_margin</span>=<span class="hljs-string">&quot;10dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;@color/black&quot;</span> /&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_query_count&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;查询用户数量&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:backgroundTint</span>=<span class="hljs-string">&quot;#FFFFFF&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#1096dc&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv_query_count&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;用户数量为: &quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;@color/black&quot;</span>/&gt;</span><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.dempprojecttwo;<br><br><span class="hljs-keyword">import</span> androidx.annotation.NonNull;<br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.os.Handler;<br><span class="hljs-keyword">import</span> android.os.Message;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.view.WindowManager;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><span class="hljs-keyword">import</span> android.widget.TextView;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AppCompatActivity</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">View</span>.OnClickListener&#123;<br><br>    <span class="hljs-keyword">private</span> Button btn_query_count;<br>    <span class="hljs-keyword">private</span> TextView tv_user_count;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-type">Handler</span> <span class="hljs-variable">handler</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Handler</span>() &#123;<br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handleMessage</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> Message msg)</span> &#123;<br><span class="hljs-comment">//            super.handleMessage(msg);</span><br>            <span class="hljs-keyword">if</span>(msg.what == <span class="hljs-number">0</span>) &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> (Integer)msg.obj;<br>                tv_user_count.setText(<span class="hljs-string">&quot;数据库内用户数量为：&quot;</span>+count);<br>            &#125;<br>        &#125;<br>    &#125;;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> &#123;<br>        <span class="hljs-comment">//去掉顶部标题</span><br>        getSupportActionBar().hide();<br><span class="hljs-comment">//去掉最上面时间、电量等</span><br>        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN<br>                , WindowManager.LayoutParams.FLAG_FULLSCREEN);<br>        <span class="hljs-built_in">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br><br>        initView();<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">initView</span><span class="hljs-params">()</span> &#123;<br>        btn_query_count = findViewById(R.id.btn_query_count);<br>        tv_user_count = findViewById(R.id.tv_query_count);<br><br>        btn_query_count.setOnClickListener(<span class="hljs-built_in">this</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">onClick</span><span class="hljs-params">(View v)</span> &#123;<br>        <span class="hljs-keyword">switch</span> (v.getId()) &#123;<br>            <span class="hljs-keyword">case</span> R.id.btn_query_count:<br>                doQueryCount();<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">doQueryCount</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span> MySqlHelp.getUserSize();<br>                <span class="hljs-type">Message</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> Message.obtain();<br>                msg.what = <span class="hljs-number">0</span>;<br>                msg.obj = count;<br><br>                handler.sendMessage(msg);<br>            &#125;<br>        &#125;).start();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>数据库内容</p><p>具体演示</p>]]></content>
    
    
    <categories>
      
      <category>笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>方法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022年上海理工大学校赛同步赛个人题解</title>
    <link href="/2022/04/03/2022%E5%B9%B4%E4%B8%8A%E6%B5%B7%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B%E5%90%8C%E6%AD%A5%E8%B5%9B%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/"/>
    <url>/2022/04/03/2022%E5%B9%B4%E4%B8%8A%E6%B5%B7%E7%90%86%E5%B7%A5%E5%A4%A7%E5%AD%A6%E6%A0%A1%E8%B5%9B%E5%90%8C%E6%AD%A5%E8%B5%9B%E4%B8%AA%E4%BA%BA%E9%A2%98%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p>总结：这次打上海理工的同步赛，结果是只过了四题。通过赛后补题，发现自己还有至少三道题是因为自己粗心导致没有注意到不该错的细节，比如 <strong>J</strong> 题的建树部分；另一方面是自己钻牛角尖，没有考虑换个角度去解决题目，比如 <strong>E</strong> 题；再者就是自己写题量不够，一些题目的解答思路没有反应过来，比如 <strong>D</strong> 题。这三道题是不该错过的，在此特别记录。还有其他的几道题因没时间去思考，比赛时也没写出。望吸取此次教训，再接再厉。</p><h1 id="a-a-b-problem"><a class="markdownIt-Anchor" href="#a-a-b-problem"></a> <a href="https://ac.nowcoder.com/acm/contest/30532/A">A. A + B Problem</a></h1><p>解析：简单题</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span> + <span class="hljs-number">5</span>;<br><br><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Node</span> &#123;<br>    <span class="hljs-type">int</span> id, val;<br>&#125;a[N], ans[N];<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    <span class="hljs-type">int</span> n; cin &gt;&gt; n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        cin &gt;&gt; a[i].val;<br>        a[i].id = i;<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(a + <span class="hljs-number">1</span>, a + <span class="hljs-number">1</span> + n, [](Node &amp;x, Node &amp;y) &#123;<br>        <span class="hljs-keyword">return</span> x.val &lt; y.val;<br>    &#125;);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = n; i &gt;= <span class="hljs-number">1</span>; i--) &#123;<br>        <span class="hljs-keyword">if</span>(i == n) &#123;<br>            ans[n].val = a[n].val + a[n - <span class="hljs-number">1</span>].val;<br>            ans[n].id = a[n].id;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            ans[i].val = a[i].val + a[n].val;<br>            ans[i].id = a[i].id;<br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(ans + <span class="hljs-number">1</span>, ans + <span class="hljs-number">1</span> + n, [](Node &amp;x, Node &amp;y)&#123;<br>        <span class="hljs-keyword">return</span> x.id &lt; y.id;<br>    &#125;);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld%c&quot;</span>, ans[i].val, i == n ? <span class="hljs-string">&#x27;\n&#x27;</span> : <span class="hljs-string">&#x27; &#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr /><h1 id="bkomorebi的数学课"><a class="markdownIt-Anchor" href="#bkomorebi的数学课"></a> <a href="https://ac.nowcoder.com/acm/contest/30532/B">B.Komorebi的数学课</a></h1><p>解析：快速幂</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> ll long long</span><br><br><span class="hljs-function">ll <span class="hljs-title">ksm</span><span class="hljs-params">(ll a, ll b, ll mod)</span> </span>&#123;<br>    ll res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(b) &#123;<br>        <span class="hljs-keyword">if</span>(b &amp; <span class="hljs-number">1</span>) res = res * a % mod;<br>        a = a * a % mod;<br>        b &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ll n; cin &gt;&gt; n;<br>    cout &lt;&lt; <span class="hljs-built_in">ksm</span>(n, n, n + <span class="hljs-number">2ll</span>) &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr /><h1 id="c次佛锅"><a class="markdownIt-Anchor" href="#c次佛锅"></a> <a href="https://ac.nowcoder.com/acm/contest/30532/C">C.次佛锅</a></h1><p>解析：简单模拟</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>map&lt;string, <span class="hljs-type">int</span>&gt; mp;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">getNum</span><span class="hljs-params">(string st)</span> </span>&#123;<br>    <span class="hljs-type">int</span> len = st.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-type">int</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>        res = res * <span class="hljs-number">10</span> + (st[i] - <span class="hljs-string">&#x27;0&#x27;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    mp.<span class="hljs-built_in">clear</span>();<br>    string st;<br>    <span class="hljs-built_in">getline</span>(cin, st);<br>    <span class="hljs-type">int</span> len = st.<span class="hljs-built_in">size</span>();<br>    string tmp, tt;<br>    <span class="hljs-type">int</span> f = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>        <span class="hljs-keyword">if</span>(st[i] == <span class="hljs-string">&#x27; &#x27;</span>) &#123;<br>            <span class="hljs-keyword">if</span>(f) &#123;<br>                f = <span class="hljs-number">0</span>;<br>                tt = tmp;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                f = <span class="hljs-number">1</span>;<br>                mp[tt] += <span class="hljs-built_in">getNum</span>(tmp);<br>            &#125;<br>            tmp = <span class="hljs-string">&quot;&quot;</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            tmp += st[i];<br>        &#125;<br>    &#125;<br>    mp[tt] += <span class="hljs-built_in">getNum</span>(tmp);<br>    <span class="hljs-type">int</span> T; cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span>(T--) &#123;<br>        string str; cin &gt;&gt; str;<br>        cout &lt;&lt; mp[str] &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr /><h1 id="dsetsuna的k数列"><a class="markdownIt-Anchor" href="#dsetsuna的k数列"></a> <a href="https://ac.nowcoder.com/acm/contest/30532/D">D.Setsuna的K数列</a></h1><p>解析：K进制。</p><p>xxxxxxxxxx7 1#include &lt;bits/stdc++.h&gt;2using namespace std;3​4int main() {5    cout &lt;&lt; “hello world\n”;6    return 0;7}cpp</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">ksm</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> </span>&#123;<br>    <span class="hljs-type">int</span> res = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">while</span>(b) &#123;<br>        <span class="hljs-keyword">if</span>(b &amp; <span class="hljs-number">1</span>) res = res * a % mod;<br>        a = a * a % mod;<br>        b &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> res;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-type">int</span> n, k;<br>    cin &gt;&gt; n &gt;&gt; k;<br>    stack&lt;<span class="hljs-type">int</span>&gt; a;<br>    <span class="hljs-keyword">while</span>(n) &#123;<br>        <span class="hljs-keyword">if</span>(n &amp; <span class="hljs-number">1</span>) a.<span class="hljs-built_in">push</span>(<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">else</span> a.<span class="hljs-built_in">push</span>(<span class="hljs-number">0</span>);<br>        n &gt;&gt;= <span class="hljs-number">1</span>;<br>    &#125;<br>    vector&lt;<span class="hljs-type">int</span>&gt; num;<br>    <span class="hljs-keyword">while</span>(!a.<span class="hljs-built_in">empty</span>()) &#123;<br>        num.<span class="hljs-built_in">push_back</span>(a.<span class="hljs-built_in">top</span>());<br>        a.<span class="hljs-built_in">pop</span>();<br>    &#125;<br>    <span class="hljs-type">int</span> len = num.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> i : num) &#123;<br>        len--;<br>        <span class="hljs-keyword">if</span>(i == <span class="hljs-number">1</span>) ans = (ans + <span class="hljs-built_in">ksm</span>(k,len)) % mod;<br>    &#125;<br>    cout &lt;&lt; ans &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr /><h1 id="ewiki下象棋"><a class="markdownIt-Anchor" href="#ewiki下象棋"></a> <a href="https://ac.nowcoder.com/acm/contest/30532/E">E.Wiki下象棋</a></h1><p>解析：模拟题。没写出原因：比赛时用了DFS来找答案了，在超时超内存的多次错误下没有反过来写BFS；另一方面，这是道明显的BFS题我却没有反应过来。。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-comment">//#define int long long</span><br><span class="hljs-type">int</span> n, m, k, a, b, c, d;<br><br><span class="hljs-type">int</span> dis[<span class="hljs-number">350</span>][<span class="hljs-number">350</span>];<br><br><span class="hljs-type">int</span> dx[][<span class="hljs-number">2</span>] = &#123;<br>        &#123;<span class="hljs-number">-2</span>, <span class="hljs-number">-1</span>&#125;,&#123;<span class="hljs-number">-1</span>, <span class="hljs-number">-2</span>&#125;,<br>        &#123;<span class="hljs-number">1</span>, <span class="hljs-number">-2</span>&#125;,&#123;<span class="hljs-number">2</span>, <span class="hljs-number">-1</span>&#125;,<br>        &#123;<span class="hljs-number">2</span>, <span class="hljs-number">1</span>&#125;,&#123;<span class="hljs-number">1</span>, <span class="hljs-number">2</span>&#125;,<br>        &#123;<span class="hljs-number">-1</span>, <span class="hljs-number">2</span>&#125;,&#123;<span class="hljs-number">-2</span>, <span class="hljs-number">1</span>&#125;<br>&#125;;<br><span class="hljs-type">int</span> dy[][<span class="hljs-number">2</span>] = &#123;<br>        &#123;<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>&#125;,&#123;<span class="hljs-number">0</span>, <span class="hljs-number">-1</span>&#125;,<br>        &#123;<span class="hljs-number">0</span>, <span class="hljs-number">-1</span>&#125;,&#123;<span class="hljs-number">1</span>, <span class="hljs-number">0</span>&#125;,<br>        &#123;<span class="hljs-number">1</span>, <span class="hljs-number">0</span>&#125;,&#123;<span class="hljs-number">0</span>, <span class="hljs-number">1</span>&#125;,<br>        &#123;<span class="hljs-number">0</span>, <span class="hljs-number">1</span>&#125;,&#123;<span class="hljs-number">-1</span>, <span class="hljs-number">0</span>&#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">bfs</span><span class="hljs-params">(<span class="hljs-type">int</span> f)</span> </span>&#123;<br>    queue&lt;pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;&gt; q;<br>    q.<span class="hljs-built_in">push</span>(<span class="hljs-built_in">make_pair</span>(a, b));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">1</span>; j &lt;= m; j++) &#123;<br>            <span class="hljs-keyword">if</span>(dis[i][j] != <span class="hljs-number">-1</span>) dis[i][j] = <span class="hljs-number">0</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">while</span> (!q.<span class="hljs-built_in">empty</span>()) &#123;<br>        <span class="hljs-keyword">auto</span> u = q.<span class="hljs-built_in">front</span>();<br>        q.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-keyword">if</span> (u.first == c &amp;&amp; u.second == d) <span class="hljs-keyword">return</span> dis[c][d];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br>            <span class="hljs-type">int</span> x = u.first + dx[i][<span class="hljs-number">0</span>], y = u.second + dx[i][<span class="hljs-number">1</span>];<br>            <span class="hljs-keyword">if</span>(x &lt; <span class="hljs-number">1</span> || x &gt; n || y &lt; <span class="hljs-number">1</span> || y &gt; m || dis[x][y] != <span class="hljs-number">0</span> || (x == a &amp;&amp; y == b)) <span class="hljs-keyword">continue</span>;<br>            <span class="hljs-keyword">if</span>(f &amp;&amp; dis[u.first+ dy[i][<span class="hljs-number">0</span>]][u.second + dy[i][<span class="hljs-number">1</span>]] == <span class="hljs-number">-1</span>) <span class="hljs-keyword">continue</span>;<br>            dis[x][y] = dis[u.first][u.second] + <span class="hljs-number">1</span>;<br>            q.<span class="hljs-built_in">push</span>(<span class="hljs-built_in">make_pair</span>(x, y));<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; a &gt;&gt; b &gt;&gt; c &gt;&gt; d;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= k; i++) &#123;<br>        <span class="hljs-type">int</span> x, y;<br>        cin &gt;&gt; x &gt;&gt; y;<br>        dis[x][y] = <span class="hljs-number">-1</span>;<br>    &#125;<br>    cout &lt;&lt; <span class="hljs-built_in">bfs</span>(<span class="hljs-number">0</span>) &lt;&lt; <span class="hljs-string">&quot; &quot;</span> &lt;&lt; <span class="hljs-built_in">bfs</span>(<span class="hljs-number">1</span>) &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    <span class="hljs-built_in">memset</span>(dis, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(dis));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int32_t</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    <span class="hljs-type">int</span> T;<br>    cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span> (T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr /><h1 id="f黄金律法"><a class="markdownIt-Anchor" href="#f黄金律法"></a> <a href="https://ac.nowcoder.com/acm/contest/30532/F">F.黄金律法</a></h1><p>解析：简单题，排序后小值加大值即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> mod = <span class="hljs-number">1e9</span>+<span class="hljs-number">7</span>;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">1e5</span>+<span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> w[N], m[N];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">memset</span>(w, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(w));<br>    <span class="hljs-built_in">memset</span>(m, <span class="hljs-number">0</span>, <span class="hljs-built_in">sizeof</span>(m));<br>    <span class="hljs-type">int</span> n;<br>    cin &gt;&gt; n;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        cin &gt;&gt; w[i];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        cin &gt;&gt; m[i];<br>    &#125;<br>    <span class="hljs-built_in">sort</span>(w + <span class="hljs-number">1</span>, w + <span class="hljs-number">1</span> + n);<br>    <span class="hljs-built_in">sort</span>(m + <span class="hljs-number">1</span>, m + <span class="hljs-number">1</span> + n, <span class="hljs-built_in">greater</span>&lt;<span class="hljs-type">int</span>&gt;());<br><br>    <span class="hljs-type">int</span> res = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>        res += w[i] * m[i];<br>    &#125;<br>    cout &lt;&lt; res &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    <span class="hljs-type">int</span> T; cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span>(T--) &#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><hr /><h1 id="j史东薇尔城"><a class="markdownIt-Anchor" href="#j史东薇尔城"></a> <a href="https://ac.nowcoder.com/acm/contest/30532/J">J.史东薇尔城</a></h1><p>解析：Dijkstra模板题。<strong>但是!!</strong> 我没AC！！原因是1. 存图的时候没注意是无向图，只存一边；2. 把模板记错了，应该用的是最大优先队列；3. 存图的时候用的是链式前向星，但是忘记把数组开大一倍。总的来说，失误在最短路的题目写少了，并且模板记得不熟。这里就突出了专题训练的重要性😭。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> int long long</span><br><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">4e5</span>+<span class="hljs-number">5</span>;<br><span class="hljs-keyword">typedef</span> pair&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt; PII;<br><span class="hljs-type">int</span> n, m;<br><span class="hljs-type">int</span> h[N], w[N], e[N], ne[N], idx;<br><span class="hljs-type">int</span> dist[N];<br><span class="hljs-type">int</span> st[N];<br><br><span class="hljs-type">int</span> arr[N];<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b, <span class="hljs-type">int</span> c)</span> </span>&#123;<br>    e[idx] = b;<br>    ne[idx] = h[a];<br>    w[idx] = c;<br>    h[a] = idx++;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">dijkstra</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">memset</span>(dist, <span class="hljs-number">0x3f</span>, <span class="hljs-built_in">sizeof</span>(dist));<br>    dist[<span class="hljs-number">1</span>] = <span class="hljs-number">0</span>;<br>    priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;<br>    heap.<span class="hljs-built_in">push</span>(&#123;<span class="hljs-number">0</span>, <span class="hljs-number">1</span>&#125;);<br>    <span class="hljs-keyword">while</span>(heap.<span class="hljs-built_in">size</span>()) &#123;<br>        <span class="hljs-keyword">auto</span> t = heap.<span class="hljs-built_in">top</span>();<br>        heap.<span class="hljs-built_in">pop</span>();<br>        <span class="hljs-type">int</span> ver = t.second, distance = t.first;<br>        <span class="hljs-keyword">if</span>(st[ver]) <span class="hljs-keyword">continue</span>;<br>        st[ver] = <span class="hljs-literal">true</span>;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = h[ver]; i != <span class="hljs-number">-1</span>; i = ne[i]) &#123;<br>            <span class="hljs-type">int</span> j = e[i];<br>            <span class="hljs-keyword">if</span>(dist[j] &gt; distance + w[i]) &#123;<br>                dist[j] = distance + w[i];<br>                heap.<span class="hljs-built_in">push</span>(&#123;dist[j], j&#125;);<br>            &#125;<br>        &#125;<br>    &#125;<br><span class="hljs-comment">//    if(dist[n] == 0x3f3f3f3f) return -1;</span><br><span class="hljs-comment">//    return dist[n];</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">signed</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    cin &gt;&gt; n &gt;&gt; m;<br>    <span class="hljs-built_in">memset</span>(h, <span class="hljs-number">-1</span>, <span class="hljs-built_in">sizeof</span>(h));<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= m; i++) &#123;<br>        <span class="hljs-type">int</span> a, b, c; cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;<br>        <span class="hljs-built_in">add</span>(a, b, c);<br>        <span class="hljs-built_in">add</span>(b, a, c);<br>    &#125;<br>    <span class="hljs-built_in">dijkstra</span>();<br><span class="hljs-comment">//    for(int i = 1; i &lt;= n; i++) &#123;</span><br><span class="hljs-comment">//        cout &lt;&lt; dist[i] &lt;&lt; &quot; &quot; ;</span><br><span class="hljs-comment">//    &#125;</span><br><span class="hljs-comment">//    cout &lt;&lt; &quot;\n&quot;;</span><br><br>    <span class="hljs-type">int</span> T; cin &gt;&gt; T;<br>    <span class="hljs-keyword">while</span>(T--) &#123;<br>        <span class="hljs-type">int</span> x, y; cin &gt;&gt; x &gt;&gt; y;<br>        cout &lt;&lt; dist[x] + dist[y] &lt;&lt; <span class="hljs-string">&quot;\n&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
